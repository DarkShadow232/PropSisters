<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Paymob Payment Test</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input, select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }
        button {
            background-color: #b94a3b;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #a03e30;
        }
        .status {
            margin-top: 20px;
            padding: 15px;
            border-radius: 5px;
        }
        .success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .info {
            background-color: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üß™ Paymob Payment Test</h1>
        <p>Test the Paymob payment integration with different scenarios.</p>
        
        <form id="paymentForm">
            <div class="form-group">
                <label for="amount">Amount (EGP):</label>
                <input type="number" id="amount" name="amount" value="100" min="1" required>
            </div>
            
            <div class="form-group">
                <label for="firstName">First Name:</label>
                <input type="text" id="firstName" name="firstName" value="John" required>
            </div>
            
            <div class="form-group">
                <label for="lastName">Last Name:</label>
                <input type="text" id="lastName" name="lastName" value="Doe" required>
            </div>
            
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" value="john.doe@example.com" required>
            </div>
            
            <div class="form-group">
                <label for="phone">Phone:</label>
                <input type="tel" id="phone" name="phone" value="+201234567890" required>
            </div>
            
            <div class="form-group">
                <label for="propertyId">Property ID:</label>
                <input type="text" id="propertyId" name="propertyId" value="69003eb309c7b707159e6c75" required>
            </div>
            
            <button type="submit">üöÄ Test Paymob Payment</button>
        </form>
        
        <div id="status"></div>
        
        <div style="margin-top: 30px;">
            <h3>üìã Test Instructions:</h3>
            <ol>
                <li>Fill in the form above with test data</li>
                <li>Click "Test Paymob Payment" to create a payment</li>
                <li>You'll be redirected to Paymob's payment page</li>
                <li>Use test card: <strong>4242 4242 4242 4242</strong></li>
                <li>Any expiry date in the future</li>
                <li>Any CVV (e.g., 123)</li>
                <li>After payment, you'll be redirected back to success/failure page</li>
            </ol>
            
            <h3>üîç What to Check:</h3>
            <ul>
                <li>Payment key creation (should return 201 status)</li>
                <li>Redirect to Paymob iframe</li>
                <li>Webhook callback (check server logs)</li>
                <li>Database booking update</li>
                <li>Success/failure page redirect</li>
            </ul>
        </div>
    </div>

    <script>
        document.getElementById('paymentForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const statusDiv = document.getElementById('status');
            statusDiv.innerHTML = '<div class="info">üîÑ Creating payment...</div>';
            
            try {
                const formData = new FormData(this);
                const data = Object.fromEntries(formData.entries());
                
                // Create booking first
                const bookingData = {
                    propertyId: data.propertyId,
                    checkIn: new Date().toISOString().split('T')[0],
                    checkOut: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
                    guests: 1,
                    totalAmount: parseInt(data.amount),
                    currency: 'EGP',
                    paymentMethod: 'card',
                    status: 'pending',
                    paymentStatus: 'pending',
                    billingData: {
                        first_name: data.firstName,
                        last_name: data.lastName,
                        email: data.email,
                        phone_number: data.phone,
                        city: 'Cairo',
                        country: 'EG',
                        state: 'Cairo'
                    }
                };
                
                console.log('Creating booking:', bookingData);
                
                // Create booking
                const bookingResponse = await fetch('/api/bookings/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(bookingData)
                });
                
                const bookingResult = await bookingResponse.json();
                console.log('Booking result:', bookingResult);
                
                if (!bookingResult.success) {
                    throw new Error(bookingResult.error || 'Failed to create booking');
                }
                
                // Create payment
                const paymentData = {
                    amount: parseInt(data.amount),
                    currency: 'EGP',
                    customerInfo: {
                        name: `${data.firstName} ${data.lastName}`,
                        email: data.email,
                        phone: data.phone
                    },
                    bookingInfo: {
                        bookingId: bookingResult.bookingId,
                        propertyId: data.propertyId,
                        checkIn: new Date(),
                        checkOut: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),
                        nights: 3
                    },
                    paymentMethod: 'card'
                };
                
                console.log('Creating payment:', paymentData);
                
                const paymentResponse = await fetch('/api/paymob/create-payment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(paymentData)
                });
                
                const paymentResult = await paymentResponse.json();
                console.log('Payment result:', paymentResult);
                
                if (!paymentResult.success) {
                    throw new Error(paymentResult.error || 'Failed to create payment');
                }
                
                statusDiv.innerHTML = '<div class="success">‚úÖ Payment created successfully! Redirecting to Paymob...</div>';
                
                // Redirect to Paymob
                if (paymentResult.paymentUrl) {
                    window.location.href = paymentResult.paymentUrl;
                } else {
                    statusDiv.innerHTML = '<div class="error">‚ùå No payment URL received</div>';
                }
                
            } catch (error) {
                console.error('Error:', error);
                statusDiv.innerHTML = `<div class="error">‚ùå Error: ${error.message}</div>`;
            }
        });
    </script>
</body>
</html>
